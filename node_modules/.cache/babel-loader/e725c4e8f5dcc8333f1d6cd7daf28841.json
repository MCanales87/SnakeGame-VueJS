{"remainingRequest":"/home/kei/WORKS/Chaty/snake/node_modules/babel-loader/lib/index.js!/home/kei/WORKS/Chaty/snake/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/kei/WORKS/Chaty/snake/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kei/WORKS/Chaty/snake/src/components/GameBoard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kei/WORKS/Chaty/snake/src/components/GameBoard.vue","mtime":1559900817755},{"path":"/home/kei/WORKS/Chaty/snake/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kei/WORKS/Chaty/snake/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/kei/WORKS/Chaty/snake/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kei/WORKS/Chaty/snake/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/home/kei/WORKS/Chaty/snake/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ScoreScreen from \"./ScoreScreen.vue\";\nimport { mapState, mapMutations } from 'vuex';\nexport default {\n  name: 'GameBoard',\n  computed: _objectSpread({}, mapState(['dx', 'dy', 'dxtmp', 'dytmp', 'body_snake', 'board', 'index_meal', 'game_over', 'score', 'title', 'game_over_message', 'scores', 'game_number']), {\n    is_gover: function is_gover() {\n      return this.$store.state.game_over;\n    },\n    get_score: function get_score() {\n      return this.$store.state.score;\n    },\n    printMeal: function printMeal() {\n      var imeal = this.index_meal;\n\n      if (imeal.length) {\n        this.board[imeal[0]][imeal[1]] = 3;\n      }\n\n      return null;\n    },\n    printSnake: function printSnake() {\n      var body_snake = this.body_snake;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = body_snake[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var ibody = _step.value;\n          this.board[ibody[0]][ibody[1]] = 2;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.board[ibody[0]][ibody[1]] = 1;\n      return null;\n    }\n  }),\n  beforeMount: function beforeMount() {\n    for (var i = 0; i < 16; i++) {\n      this.$store.state.board.push(new Array(16).fill(0));\n    }\n\n    this.uploadIndexMeal();\n  },\n  mounted: function mounted() {\n    this.play();\n  },\n  methods: _objectSpread({}, mapMutations(['clearBoard', 'uploadIndexMeal', 'play', 'keyup', 'walk', 'gameOver', 'upload'])),\n  components: {\n    ScoreScreen: ScoreScreen\n  },\n  props: {\n    msg: String\n  }\n};",{"version":3,"sources":["GameBoard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAA,WAAA;AACA,SAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,QAAA,oBACA,QAAA,CAAA,CACA,IADA,EAEA,IAFA,EAGA,OAHA,EAIA,OAJA,EAKA,YALA,EAMA,OANA,EAOA,YAPA,EAQA,WARA,EASA,OATA,EAUA,OAVA,EAWA,mBAXA,EAYA,QAZA,EAaA,aAbA,CAAA,CADA;AAgBA,IAAA,QAhBA,sBAgBA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA;AACA,KAlBA;AAmBA,IAAA,SAnBA,uBAmBA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA;AACA,KArBA;AAsBA,IAAA,SAtBA,uBAsBA;AACA,UAAA,KAAA,GAAA,KAAA,UAAA;;AACA,UAAA,KAAA,CAAA,MAAA,EAAA;AACA,aAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AACA;;AACA,aAAA,IAAA;AACA,KA5BA;AA6BA,IAAA,UA7BA,wBA6BA;AACA,UAAA,UAAA,GAAA,KAAA,UAAA;AADA;AAAA;AAAA;;AAAA;AAEA,6BAAA,UAAA,8HAAA;AAAA,cAAA,KAAA;AACA,eAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,WAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AACA,aAAA,IAAA;AACA;AApCA,IAFA;AAwCA,EAAA,WAxCA,yBAwCA;AACA,SAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA;AACA,WAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,KAAA,CAAA,EAAA,EAAA,IAAA,CAAA,CAAA,CAAA;AADA;;AAEA,SAAA,eAAA;AACA,GA5CA;AA6CA,EAAA,OA7CA,qBA6CA;AACA,SAAA,IAAA;AACA,GA/CA;AAgDA,EAAA,OAAA,oBACA,YAAA,CAAA,CACA,YADA,EAEA,iBAFA,EAGA,MAHA,EAIA,OAJA,EAKA,MALA,EAMA,UANA,EAOA,QAPA,CAAA,CADA,CAhDA;AA2DA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GA3DA;AA8DA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AADA;AA9DA,CAAA","sourcesContent":["<template>\n  <div>\n  <main class=\"main\">{{printMeal}}{{printSnake}}\n    <ScoreScreen></ScoreScreen>\n    <div class=\"grid\">\n      <div v-for=\"(index, i) in 16\" class=\"row\">\n        <div v-for=\"(index, j) in 16\" :class=\"{\n          nothing: board[i][j]==0,\n          headSnake: board[i][j]==1,\n          bodySnake: board[i][j]==2,\n          mealSnake: board[i][j]==3\n        }\">\n        </div>\n      </div>\n    </div>\n\n    <footer class=\"header\">score: {{score}}</footer>\n  </main>\n  </div>\n</template>\n\n<script>\nimport ScoreScreen from './ScoreScreen.vue';\nimport {mapState, mapMutations} from 'vuex';\n\nexport default {\n  name: 'GameBoard',\n  computed: {\n    ...mapState([\n      'dx',\n      'dy',\n      'dxtmp',\n      'dytmp',\n      'body_snake',\n      'board',\n      'index_meal',\n      'game_over',\n      'score',\n      'title',\n      'game_over_message',\n      'scores',\n      'game_number'\n    ]),\n    is_gover() {\n      return this.$store.state.game_over;\n    },\n    get_score(){\n      return this.$store.state.score;\n    },\n    printMeal() {\n      var imeal = this.index_meal;\n      if ( imeal.length ) {\n        this.board[imeal[0]][imeal[1]] = 3\n      }\n      return null;\n    },\n    printSnake() {\n      var body_snake = this.body_snake\n      for (var ibody of body_snake) {\n        this.board[ibody[0]][ibody[1]] = 2;\n      }\n      this.board[ibody[0]][ibody[1]] = 1;\n      return null;\n    }\n  },\n  beforeMount() {\n    for(var i = 0; i < 16; i++)\n      this.$store.state.board.push(new Array(16).fill(0));\n    this.uploadIndexMeal();\n  },\n  mounted() {\n    this.play();\n  },\n  methods: {\n    ...mapMutations([\n      'clearBoard',\n      'uploadIndexMeal',\n      'play',\n      'keyup',\n      'walk',\n      'gameOver',\n      'upload'\n    ]),\n  },\n  components: {\n    ScoreScreen\n  },\n  props: {\n    msg: String\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n.main {\n  display: -webkit-flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  z-index: 0;\n}\n.grid {\n    display: -webkit-flex;\n    flex-direction: column;\n    justify-content: center;\n    border: 2px solid #333;\n}\n.row {\n    border-top: 1px solid #e9e9e9;\n    display: flex;\n}\n.nothing {\n  height: 35px;\n  width: 35px;\n  border: 1px solid #e9e9e9;\n  background-color: white;\n}\n.headSnake {\n  height: 35px;\n  width: 35px;\n  border: 1px solid #e9e9e9;\n  background-image: url(../assets/zoo2.png);\n  background-size: 100% 100%;\n}\n.bodySnake {\n  height: 35px;\n  width: 35px;\n  border-radius: 50%;\n  border: 1px solid #e9e9e9;\n  background: #9F7267\n}\n.mealSnake {\n  height: 35px;\n  width: 35px;\n  border-radius: 50%;\n  border: 1px solid #e9e9e9;\n  background-image: url(../assets/food.png);\n  background-size: 100% 100%;\n}\n.header {\n  text-align: center;\n  padding: 12px 0;\n  font-family: 'Rubik', sans-serif;\n}\n\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"sourceRoot":"src/components"}]}