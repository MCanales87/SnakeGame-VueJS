{"remainingRequest":"/home/kei/WORKS/Chaty/snake/node_modules/babel-loader/lib/index.js!/home/kei/WORKS/Chaty/snake/node_modules/eslint-loader/index.js??ref--13-0!/home/kei/WORKS/Chaty/snake/src/store.js","dependencies":[{"path":"/home/kei/WORKS/Chaty/snake/src/store.js","mtime":1559901176920},{"path":"/home/kei/WORKS/Chaty/snake/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kei/WORKS/Chaty/snake/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/kei/WORKS/Chaty/snake/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    dx: 0,\n    dy: 0,\n    dxtmp: 0,\n    dytmp: 0,\n    body_snake: [[3, 2], [3, 3], [3, 4]],\n    board: [],\n    index_meal: [],\n    game_over: false,\n    score: 0,\n    title: \"SNAKE GAME\",\n    game_over_message: \"\",\n    scores: [],\n    game_number: 0\n  },\n  mutations: {\n    clearBoard: function clearBoard(state) {\n      for (var i = 0; i < 16; i++) {\n        for (var j = 0; j < 16; j++) {\n          state.board[i][j] = 0;\n        }\n      }\n\n      this.commit(\"uploadIndexMeal\");\n      state.score = 0;\n    },\n    uploadIndexMeal: function uploadIndexMeal(state) {\n      while (true) {\n        var idx_cell_rand = Math.floor(Math.random() * 16 * 16);\n        var ix = Math.floor(idx_cell_rand / 16);\n        var iy = idx_cell_rand % 16;\n\n        if (state.board[ix][iy] == 0) {\n          state.index_meal = [ix, iy];\n          break;\n        }\n      }\n    },\n    keyup: function keyup(state, event) {\n      console.log(event.keyCode);\n\n      if (event.keyCode == 32) {\n        state.game_over = false;\n        this.commit(\"clearBoard\");\n        state.body_snake = [[3, 2], [3, 3], [3, 4]];\n      }\n\n      if (event.keyCode == 38) {\n        //up\n        if (state.dx == 0) {\n          state.dxtmp = -1;\n          state.dytmp = 0;\n        }\n      }\n\n      if (event.keyCode == 39) {\n        //right\n        if (state.dy == 0) {\n          state.dxtmp = 0;\n          state.dytmp = 1;\n        }\n      }\n\n      if (event.keyCode == 40) {\n        //down\n        if (state.dx == 0) {\n          state.dxtmp = 1;\n          state.dytmp = 0;\n        }\n      }\n\n      if (event.keyCode == 37) {\n        //left\n        if (state.dy == 0) {\n          state.dxtmp = 0;\n          state.dytmp = -1;\n        }\n      }\n    },\n    walk: function walk(state, dxx, dyy) {\n      var dx = state.dx;\n      var dy = state.dy;\n\n      if (dx != 0 || dy != 0) {\n        var bs = state.body_snake;\n        var is = bs[bs.length - 1];\n        var ihead_snake = new Array();\n        ihead_snake.push(is[0]);\n        ihead_snake.push(is[1]);\n        ihead_snake[0] += dx;\n        ihead_snake[1] += dy;\n\n        if (ihead_snake[0] < 0 || ihead_snake[0] > 15 || ihead_snake[1] < 0 || ihead_snake[1] > 15) {\n          this.commit(\"gameOver\");\n        } else {\n          state.body_snake.push(ihead_snake);\n\n          if (ihead_snake[0] != state.index_meal[0] || ihead_snake[1] != state.index_meal[1]) {\n            //\n            var tail = state.body_snake.shift();\n            state.board[tail[0]][tail[1]] = 0;\n          } else {\n            this.commit(\"uploadIndexMeal\");\n            state.score += 1;\n          }\n        }\n      }\n    },\n    gameOver: function gameOver(state) {\n      var self = state;\n      state.game_number++;\n      state.scores.push({\n        name: 'Player ' + self.game_number,\n        score: self.score\n      });\n      state.scores.sort(function (a, b) {\n        return b.score - a.score;\n      });\n      state.game_over = true;\n      state.game_over_message = \"SCORE LIST\";\n      state.dx = 0;\n      state.dy = 0;\n      state.dxtmp = 0;\n      state.dytmp = 0;\n      console.log(state.scores);\n    },\n    upload: function upload(state) {\n      state.dx = state.dxtmp;\n      state.dy = state.dytmp;\n      this.commit(\"walk\", state.dx, state.dy);\n    },\n    play: function play() {\n      var self = this;\n      setInterval(function () {\n        self.commit('upload');\n      }, 200);\n    }\n  },\n  actions: {}\n});",{"version":3,"sources":["/home/kei/WORKS/Chaty/snake/src/store.js"],"names":["Vue","Vuex","use","Store","state","dx","dy","dxtmp","dytmp","body_snake","board","index_meal","game_over","score","title","game_over_message","scores","game_number","mutations","clearBoard","i","j","commit","uploadIndexMeal","idx_cell_rand","Math","floor","random","ix","iy","keyup","event","console","log","keyCode","walk","dxx","dyy","bs","is","length","ihead_snake","Array","push","tail","shift","gameOver","self","name","sort","a","b","upload","play","setInterval","actions"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    dx: 0,\n    dy: 0,\n    dxtmp: 0,\n    dytmp: 0,\n    body_snake: [[3,2],[3,3],[3,4]],\n    board: [],\n    index_meal: [],\n    game_over: false,\n    score: 0,\n    title: \"SNAKE GAME\",\n    game_over_message: \"\",\n    scores: [],\n    game_number: 0\n  },\n  mutations: {\n    clearBoard(state) {\n      for(var i = 0; i < 16; i++)\n        for(var j = 0; j < 16; j++)\n          state.board[i][j] = 0;\n      this.commit(\"uploadIndexMeal\");\n      state.score = 0;\n    },\n    uploadIndexMeal(state) {\n      while(true) {\n        var idx_cell_rand = Math.floor(Math.random()*16*16);\n        var ix = Math.floor(idx_cell_rand/16);\n        var iy = idx_cell_rand % 16;\n        if ( state.board[ix][iy] == 0 ) {\n          state.index_meal = [ix, iy];\n          break;\n        }\n      }\n    },\n    keyup(state, event) {\n      console.log(event.keyCode)\n      if (event.keyCode == 32) {\n        state.game_over = false;\n        this.commit(\"clearBoard\");\n        state.body_snake = [[3,2],[3,3],[3,4]];\n      }\n      if (event.keyCode == 38) { //up\n        if ( state.dx == 0 ) {\n          state.dxtmp = -1;\n          state.dytmp = 0;\n        }\n      }\n      if (event.keyCode == 39) { //right\n        if ( state.dy == 0 ) {\n          state.dxtmp = 0;\n          state.dytmp = 1;\n        }\n      }\n      if (event.keyCode == 40) { //down\n        if ( state.dx == 0 ) {\n          state.dxtmp = 1;\n          state.dytmp = 0;\n        }\n      }\n      if (event.keyCode == 37) { //left\n        if ( state.dy == 0 ) {\n          state.dxtmp = 0;\n          state.dytmp = -1;\n        }\n      }\n    },\n    walk(state, dxx, dyy) {\n      var dx = state.dx;\n      var dy = state.dy;\n      if (dx != 0 || dy != 0 ) {\n        var bs = state.body_snake;\n\n        var is = bs[bs.length - 1];\n        var ihead_snake = new Array()\n        ihead_snake.push(is[0])\n        ihead_snake.push(is[1])\n        ihead_snake[0] += dx;\n        ihead_snake[1] += dy;\n\n        if ( ihead_snake[0] < 0 || ihead_snake[0] > 15 || ihead_snake[1] < 0 || ihead_snake[1] > 15 ) {\n          this.commit(\"gameOver\");\n        } else {\n          state.body_snake.push(ihead_snake);\n          if ( ihead_snake[0] != state.index_meal[0] || ihead_snake[1] != state.index_meal[1] ) { //\n            var tail = state.body_snake.shift()\n            state.board[tail[0]][tail[1]] = 0\n          } else {\n            this.commit(\"uploadIndexMeal\")\n            state.score += 1;\n          }\n        }\n      }\n    },\n    gameOver(state) {\n      var self = state;\n      state.game_number++;\n      state.scores.push({\n        name: 'Player ' + self.game_number,\n        score: self.score\n      });\n      state.scores.sort(function (a, b) {\n        return b.score - a.score;\n      });\n      state.game_over = true;\n      state.game_over_message = \"SCORE LIST\";\n      state.dx = 0;\n      state.dy = 0;\n      state.dxtmp = 0;\n      state.dytmp = 0;\n      console.log(state.scores)\n    },\n    upload(state) {\n      state.dx = state.dxtmp;\n      state.dy = state.dytmp;\n      this.commit(\"walk\",state.dx, state.dy);\n    },\n    play() {\n      const self = this;\n      setInterval(function () {\n        self.commit('upload');\n      }, 200);\n    }\n  },\n  actions: {\n\n  }\n})\n"]}]}