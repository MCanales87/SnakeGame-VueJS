{"remainingRequest":"/home/kei/WORKS/Chaty/snake/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kei/WORKS/Chaty/snake/src/components/GameBoard.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/kei/WORKS/Chaty/snake/src/components/GameBoard.vue","mtime":1559900817755},{"path":"/home/kei/WORKS/Chaty/snake/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/kei/WORKS/Chaty/snake/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/kei/WORKS/Chaty/snake/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/kei/WORKS/Chaty/snake/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kei/WORKS/Chaty/snake/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.main {\n  display: -webkit-flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  z-index: 0;\n}\n.grid {\n    display: -webkit-flex;\n    flex-direction: column;\n    justify-content: center;\n    border: 2px solid #333;\n}\n.row {\n    border-top: 1px solid #e9e9e9;\n    display: flex;\n}\n.nothing {\n  height: 35px;\n  width: 35px;\n  border: 1px solid #e9e9e9;\n  background-color: white;\n}\n.headSnake {\n  height: 35px;\n  width: 35px;\n  border: 1px solid #e9e9e9;\n  background-image: url(../assets/zoo2.png);\n  background-size: 100% 100%;\n}\n.bodySnake {\n  height: 35px;\n  width: 35px;\n  border-radius: 50%;\n  border: 1px solid #e9e9e9;\n  background: #9F7267\n}\n.mealSnake {\n  height: 35px;\n  width: 35px;\n  border-radius: 50%;\n  border: 1px solid #e9e9e9;\n  background-image: url(../assets/food.png);\n  background-size: 100% 100%;\n}\n.header {\n  text-align: center;\n  padding: 12px 0;\n  font-family: 'Rubik', sans-serif;\n}\n\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n",{"version":3,"sources":["GameBoard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GameBoard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n  <main class=\"main\">{{printMeal}}{{printSnake}}\n    <ScoreScreen></ScoreScreen>\n    <div class=\"grid\">\n      <div v-for=\"(index, i) in 16\" class=\"row\">\n        <div v-for=\"(index, j) in 16\" :class=\"{\n          nothing: board[i][j]==0,\n          headSnake: board[i][j]==1,\n          bodySnake: board[i][j]==2,\n          mealSnake: board[i][j]==3\n        }\">\n        </div>\n      </div>\n    </div>\n\n    <footer class=\"header\">score: {{score}}</footer>\n  </main>\n  </div>\n</template>\n\n<script>\nimport ScoreScreen from './ScoreScreen.vue';\nimport {mapState, mapMutations} from 'vuex';\n\nexport default {\n  name: 'GameBoard',\n  computed: {\n    ...mapState([\n      'dx',\n      'dy',\n      'dxtmp',\n      'dytmp',\n      'body_snake',\n      'board',\n      'index_meal',\n      'game_over',\n      'score',\n      'title',\n      'game_over_message',\n      'scores',\n      'game_number'\n    ]),\n    is_gover() {\n      return this.$store.state.game_over;\n    },\n    get_score(){\n      return this.$store.state.score;\n    },\n    printMeal() {\n      var imeal = this.index_meal;\n      if ( imeal.length ) {\n        this.board[imeal[0]][imeal[1]] = 3\n      }\n      return null;\n    },\n    printSnake() {\n      var body_snake = this.body_snake\n      for (var ibody of body_snake) {\n        this.board[ibody[0]][ibody[1]] = 2;\n      }\n      this.board[ibody[0]][ibody[1]] = 1;\n      return null;\n    }\n  },\n  beforeMount() {\n    for(var i = 0; i < 16; i++)\n      this.$store.state.board.push(new Array(16).fill(0));\n    this.uploadIndexMeal();\n  },\n  mounted() {\n    this.play();\n  },\n  methods: {\n    ...mapMutations([\n      'clearBoard',\n      'uploadIndexMeal',\n      'play',\n      'keyup',\n      'walk',\n      'gameOver',\n      'upload'\n    ]),\n  },\n  components: {\n    ScoreScreen\n  },\n  props: {\n    msg: String\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n.main {\n  display: -webkit-flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  z-index: 0;\n}\n.grid {\n    display: -webkit-flex;\n    flex-direction: column;\n    justify-content: center;\n    border: 2px solid #333;\n}\n.row {\n    border-top: 1px solid #e9e9e9;\n    display: flex;\n}\n.nothing {\n  height: 35px;\n  width: 35px;\n  border: 1px solid #e9e9e9;\n  background-color: white;\n}\n.headSnake {\n  height: 35px;\n  width: 35px;\n  border: 1px solid #e9e9e9;\n  background-image: url(../assets/zoo2.png);\n  background-size: 100% 100%;\n}\n.bodySnake {\n  height: 35px;\n  width: 35px;\n  border-radius: 50%;\n  border: 1px solid #e9e9e9;\n  background: #9F7267\n}\n.mealSnake {\n  height: 35px;\n  width: 35px;\n  border-radius: 50%;\n  border: 1px solid #e9e9e9;\n  background-image: url(../assets/food.png);\n  background-size: 100% 100%;\n}\n.header {\n  text-align: center;\n  padding: 12px 0;\n  font-family: 'Rubik', sans-serif;\n}\n\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}